// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	valueobject "convercy/domain/valueobject"
)

// ExchangeRatesService is an autogenerated mock type for the ExchangeRatesService type
type ExchangeRatesService struct {
	mock.Mock
}

// ListExchangeRates provides a mock function with given fields:
func (_m *ExchangeRatesService) ListExchangeRates() (valueobject.ExchangeRates, error) {
	ret := _m.Called()

	var r0 valueobject.ExchangeRates
	var r1 error
	if rf, ok := ret.Get(0).(func() (valueobject.ExchangeRates, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() valueobject.ExchangeRates); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(valueobject.ExchangeRates)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewExchangeRatesService interface {
	mock.TestingT
	Cleanup(func())
}

// NewExchangeRatesService creates a new instance of ExchangeRatesService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewExchangeRatesService(t mockConstructorTestingTNewExchangeRatesService) *ExchangeRatesService {
	mock := &ExchangeRatesService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
