// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	entity "convercy/domain/entity"

	mock "github.com/stretchr/testify/mock"

	valueobject "convercy/domain/valueobject"
)

// CurrencyExchangeRatesService is an autogenerated mock type for the CurrencyExchangeRatesService type
type CurrencyExchangeRatesService struct {
	mock.Mock
}

// ListCurrencyExchangeRates provides a mock function with given fields: currency
func (_m *CurrencyExchangeRatesService) ListCurrencyExchangeRates(currency *entity.Currency) (valueobject.ExchangeRates, error) {
	ret := _m.Called(currency)

	var r0 valueobject.ExchangeRates
	var r1 error
	if rf, ok := ret.Get(0).(func(*entity.Currency) (valueobject.ExchangeRates, error)); ok {
		return rf(currency)
	}
	if rf, ok := ret.Get(0).(func(*entity.Currency) valueobject.ExchangeRates); ok {
		r0 = rf(currency)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(valueobject.ExchangeRates)
		}
	}

	if rf, ok := ret.Get(1).(func(*entity.Currency) error); ok {
		r1 = rf(currency)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCurrencyExchangeRatesService interface {
	mock.TestingT
	Cleanup(func())
}

// NewCurrencyExchangeRatesService creates a new instance of CurrencyExchangeRatesService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCurrencyExchangeRatesService(t mockConstructorTestingTNewCurrencyExchangeRatesService) *CurrencyExchangeRatesService {
	mock := &CurrencyExchangeRatesService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
