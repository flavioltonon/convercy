// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	aggregate "convercy/domain/aggregate"

	mock "github.com/stretchr/testify/mock"

	valueobject "convercy/domain/valueobject"
)

// CurrencyExchangeRatesRepository is an autogenerated mock type for the CurrencyExchangeRatesRepository type
type CurrencyExchangeRatesRepository struct {
	mock.Mock
}

// GetCurrencyExchangeRates provides a mock function with given fields: code
func (_m *CurrencyExchangeRatesRepository) GetCurrencyExchangeRates(code valueobject.CurrencyCode) (*aggregate.CurrencyExchangeRates, error) {
	ret := _m.Called(code)

	var r0 *aggregate.CurrencyExchangeRates
	var r1 error
	if rf, ok := ret.Get(0).(func(valueobject.CurrencyCode) (*aggregate.CurrencyExchangeRates, error)); ok {
		return rf(code)
	}
	if rf, ok := ret.Get(0).(func(valueobject.CurrencyCode) *aggregate.CurrencyExchangeRates); ok {
		r0 = rf(code)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*aggregate.CurrencyExchangeRates)
		}
	}

	if rf, ok := ret.Get(1).(func(valueobject.CurrencyCode) error); ok {
		r1 = rf(code)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCurrencyExchangeRatesRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewCurrencyExchangeRatesRepository creates a new instance of CurrencyExchangeRatesRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCurrencyExchangeRatesRepository(t mockConstructorTestingTNewCurrencyExchangeRatesRepository) *CurrencyExchangeRatesRepository {
	mock := &CurrencyExchangeRatesRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
